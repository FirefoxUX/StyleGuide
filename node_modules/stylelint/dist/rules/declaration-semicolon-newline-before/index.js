"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _utils = require("../../utils");

var ruleName = "declaration-semicolon-newline-before";

exports.ruleName = ruleName;
var messages = (0, _utils.ruleMessages)(ruleName, {
  expectedBefore: function expectedBefore() {
    return "Expected newline before \";\"";
  },
  rejectedBefore: function rejectedBefore() {
    return "Unexpected space before \";\"";
  },
  expectedBeforeMultiLine: function expectedBeforeMultiLine() {
    return "Expected newline before \";\" within multi-line declaration block";
  },
  rejectedBeforeMultiLine: function rejectedBeforeMultiLine() {
    return "Unexpected space before \";\" within multi-line declaration block";
  } });

exports.messages = messages;
/**
 * @param {"always"|"never"|"always-multi-line"|"never-multi-line"} expectation
 */

exports["default"] = function (expectation) {
  var check = (0, _utils.whitespaceChecker)("\n", expectation, messages);
  return function (css, result) {
    css.eachDecl(function (decl) {
      var parentRule = decl.parent;
      if (!parentRule.semicolon && parentRule.last === decl) {
        return;
      }

      var declString = decl.toString();
      check.before(declString, declString.length, function (m) {
        return result.warn(m, { node: decl });
      }, parentRule.toString().slice("{"));
    });
  };
};