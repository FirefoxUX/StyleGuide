"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = require("../../utils");

var ruleName = "declaration-bang-space";

exports.ruleName = ruleName;
var messages = (0, _utils.standardWhitespaceMessages)(ruleName, {
  expectedBefore: function expectedBefore() {
    return "Expected single space before \"!\"";
  },
  rejectedBefore: function rejectedBefore() {
    return "Expected no space before \"!\"";
  },
  expectedAfter: function expectedAfter() {
    return "Expected single space after \"!\"";
  },
  rejectedAfter: function rejectedAfter() {
    return "Expected no space after \"!\"";
  } });

exports.messages = messages;
/**
 * @param {object} options
 * @param {"always"|"never"} [options.before]
 * @param {"always"|"never"} [options.after]
 */

exports["default"] = function (options) {
  var spaceOptions = (0, _utils.standardWhitespaceOptions)(options);
  var spaceChecker = (0, _utils.standardWhitespaceChecker)(" ", spaceOptions, messages);

  return function (css, result) {
    css.eachDecl(function (decl) {
      if (!decl.important) {
        return;
      }
      var declString = decl.toString();

      // Start from the right and only pay attention to the first
      // exclamation mark found
      _lodash2["default"].forEachRight(declString, function (char, i) {
        if (char !== "!") {
          return;
        }
        spaceChecker.before(declString, i, function (msg) {
          result.warn(msg, { node: decl });
        });
        spaceChecker.after(declString, i, function (msg) {
          result.warn(msg, { node: decl });
        });
        return false;
      });
    });
  };
};