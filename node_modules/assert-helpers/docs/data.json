{
    "project": {},
    "files": {
        "esnext/lib/index.js": {
            "name": "esnext/lib/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {},
    "elements": {},
    "classitems": [
        {
            "file": "esnext/lib/index.js",
            "line": 9,
            "description": "Alias for setTimeout with paramaters reversed",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "wait",
            "params": [
                {
                    "name": "delay",
                    "description": "Delay to send to setTimeout",
                    "type": "Number"
                },
                {
                    "name": "fn",
                    "description": "Function to send to setTimeout",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "result of the setTimeout call",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 22,
            "description": "Whether or not stdout and stderr are interactive",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "isTTY",
            "return": {
                "description": "Yes they are, or no they aren't.",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 33,
            "description": "Return a stringified version of the value with indentation and colors where applicable",
            "static": 1,
            "itemtype": "method",
            "name": "inspect",
            "params": [
                {
                    "name": "value",
                    "description": "The value to inspect",
                    "type": "Mixed"
                },
                {
                    "name": "opts",
                    "description": "The options to pass to util.inspect",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "return": {
                "description": "The inspected string of the value",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 56,
            "description": "Return a highlighted string of a diff object",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "inspectDiff",
            "params": [
                {
                    "name": "diff",
                    "description": "The diff data to highlight",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The highlighted comparison",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 79,
            "description": "Return a highlighted comparison between the new data and the old data",
            "static": 1,
            "itemtype": "method",
            "name": "diffStrings",
            "params": [
                {
                    "name": "newData",
                    "description": "The new data",
                    "type": "Object"
                },
                {
                    "name": "oldData",
                    "description": "The old data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The highlighted comparison",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 92,
            "description": "Return a highlighted comparison between the new data and the old data",
            "static": 1,
            "itemtype": "method",
            "name": "diffObjects",
            "params": [
                {
                    "name": "newData",
                    "description": "The new data",
                    "type": "Object"
                },
                {
                    "name": "oldData",
                    "description": "The old data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The highlighted comparison",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 105,
            "description": "Log the inspected values of each of the arguments to stdout",
            "static": 1,
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "args",
                    "description": "The arguments to inspect and log",
                    "type": "Mixed",
                    "multiple": true
                }
            ],
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 118,
            "description": "Output a comparison of the failed result to stderr",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "logComparison",
            "params": [
                {
                    "name": "actual",
                    "description": "The result data",
                    "type": "Mixed"
                },
                {
                    "name": "expected",
                    "description": "The anticipated data",
                    "type": "Mixed"
                },
                {
                    "name": "error",
                    "description": "The error instance or error message string to report",
                    "type": "Error|String"
                }
            ],
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 169,
            "description": "Same as assert.equal in that it performs a strict equals check, but if a failure occurs it will output detailed information",
            "static": 1,
            "itemtype": "method",
            "name": "equal",
            "params": [
                {
                    "name": "actual",
                    "description": "The result data",
                    "type": "Mixed"
                },
                {
                    "name": "expected",
                    "description": "The anticipated data",
                    "type": "Mixed"
                },
                {
                    "name": "testName",
                    "description": "The name of the test",
                    "type": "String",
                    "optional": true
                }
            ],
            "throws": {
                "description": "If the comparison failed, the failure will be thrown",
                "type": "Error"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 188,
            "description": "Same as assert.deepEQual in that it performs a deep equals check, but if a failure occurs it will output detailed information",
            "static": 1,
            "itemtype": "method",
            "name": "deepEqual",
            "params": [
                {
                    "name": "actual",
                    "description": "The result data",
                    "type": "Mixed"
                },
                {
                    "name": "expected",
                    "description": "The anticipated data",
                    "type": "Mixed"
                },
                {
                    "name": "testName",
                    "description": "The name of the test",
                    "type": "String",
                    "optional": true
                }
            ],
            "throws": {
                "description": "If the comparison failed, the failure will be thrown",
                "type": "Error"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 207,
            "description": "Checks to see if the actual result contains the expected result",
            "static": 1,
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "actual",
                    "description": "The result data",
                    "type": "Mixed"
                },
                {
                    "name": "expected",
                    "description": "The anticipated data",
                    "type": "Mixed"
                },
                {
                    "name": "testName",
                    "description": "The name of the test",
                    "type": "String",
                    "optional": true
                }
            ],
            "throws": {
                "description": "If the comparison failed, the failure will be thrown",
                "type": "Error"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 221,
            "description": "Checks to see if an error was as expected, if a failure occurs it will output detailed information",
            "static": 1,
            "itemtype": "method",
            "name": "errorEqual",
            "params": [
                {
                    "name": "actual",
                    "description": "The result error",
                    "type": "Error"
                },
                {
                    "name": "expected",
                    "description": "The anticipated error instance or message, can be null if you expect there to be no error",
                    "type": "Error|String|Null"
                },
                {
                    "name": "testName",
                    "description": "The name of the test",
                    "type": "String",
                    "optional": true
                }
            ],
            "throws": {
                "description": "If the comparison failed, the failure will be thrown",
                "type": "Error"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 273,
            "description": "Generate a callback that will return the specified result",
            "static": 1,
            "itemtype": "method",
            "name": "returnViaCallback",
            "params": [
                {
                    "name": "result",
                    "description": "The result that the callback should return",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "The callback that will return the specified result",
                "type": "Function"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 286,
            "description": "Generate a callback that will receive a completion callback and call it with the specified result after the specified delay",
            "static": 1,
            "itemtype": "method",
            "name": "completeViaCallback",
            "params": [
                {
                    "name": "result",
                    "description": "The result that the callback should pass to the completion callback",
                    "type": "Mixed"
                },
                {
                    "name": "delay",
                    "description": "The delay in milliseconds that we should wait before calling the completion callback",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "100"
                }
            ],
            "return": {
                "description": "The callback that will provide the specified result",
                "type": "Function"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 303,
            "description": "Generate a callback that return an error instance with the specified message/error",
            "static": 1,
            "itemtype": "method",
            "name": "returnErrorViaCallback",
            "params": [
                {
                    "name": "error",
                    "description": "The error instance or message string that the callback will return",
                    "type": "Error|String",
                    "optional": true,
                    "optdefault": "'an error occured'"
                }
            ],
            "return": {
                "description": "The callback that will return the specified result",
                "type": "Function"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 321,
            "description": "Generate a callback that throw an error instance with the specified message/error",
            "static": 1,
            "itemtype": "method",
            "name": "throwErrorViaCallback",
            "params": [
                {
                    "name": "error",
                    "description": "The error instance or message string that the callback will throw",
                    "type": "Error|String",
                    "optional": true,
                    "optdefault": "'an error occured'"
                }
            ],
            "return": {
                "description": "The callback that will throw the specified error",
                "type": "Function"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 339,
            "description": "Generate a callback that will check the arguments it received with the arguments specified, if a failure occurs it will output detailed information",
            "static": 1,
            "itemtype": "method",
            "name": "expectViaCallback",
            "params": [
                {
                    "name": "argsExpected",
                    "description": "The arguments that we expect the callback to receive when it is called",
                    "type": "Mixed",
                    "multiple": true
                }
            ],
            "return": {
                "description": "The callback that will check the arguments it receives for the expected arguments",
                "type": "Function"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 353,
            "description": "Generate a callback that will check the error (if any) it receives for the expected error (if any), if a failure occurs it will output detailed information",
            "static": 1,
            "itemtype": "method",
            "name": "expectErrorViaCallback",
            "params": [
                {
                    "name": "error",
                    "description": "The error instance or message string that we expected, passed as the second argument to errorEqual",
                    "type": "Mixed"
                },
                {
                    "name": "next",
                    "description": "An optional completion callback to call with the result of the compairson, if not specified and a failure occurs, the error will be thrown",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "The callback that will check the error (if any) it receives for the expected error (if any)",
                "type": "Function"
            },
            "class": ""
        },
        {
            "file": "esnext/lib/index.js",
            "line": 379,
            "description": "Expect the passed function to throw the passed error (if any)",
            "static": 1,
            "itemtype": "method",
            "name": "expectFunctionToThrow",
            "params": [
                {
                    "name": "fn",
                    "description": "The function that we will call and expect to throw the passed error",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "The error instance or message string that we expected, passed as the second argument to errorEqual",
                    "type": "Mixed"
                },
                {
                    "name": "testName",
                    "description": "The name of the test",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": ""
        }
    ],
    "warnings": []
}